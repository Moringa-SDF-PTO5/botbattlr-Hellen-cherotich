{"ast":null,"code":"var _jsxFileName = \"/root/botbattlr-Hellen-cherotich/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://json-server-8vqy.onrender.com/bots`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          throw new Error('Response is not in JSON format');\n        }\n        const data = await response.json();\n        setBots(data);\n      } catch (error) {\n        console.error('Error fetching bots:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const enlistBot = bot => {\n    if (!army.some(b => b.id === bot.id)) {\n      setArmy([...army, bot]);\n    }\n  };\n  const releaseBot = bot => {\n    setArmy(army.filter(b => b.id !== bot.id));\n  };\n  const dischargeBot = async botId => {\n    try {\n      await fetch(`https://json-server-8vqy.onrender.com/bots/${botId}`, {\n        method: 'DELETE'\n      });\n      setArmy(army.filter(b => b.id !== botId));\n    } catch (error) {\n      console.error('Error discharging bot:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-collection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Bots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: bots,\n        enlistBot: enlistBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"your-bot-army\",\n      children: /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        army: army,\n        releaseBot: releaseBot,\n        dischargeBot: dischargeBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"68vvBV/GRPK97Mw+lesffEpDxCY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","army","setArmy","fetchData","response","fetch","ok","Error","contentType","headers","get","includes","data","json","error","console","enlistBot","bot","some","b","id","releaseBot","filter","dischargeBot","botId","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/botbattlr-Hellen-cherotich/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\n\nconst App = () => {\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://json-server-8vqy.onrender.com/bots`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n  \n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          throw new Error('Response is not in JSON format');\n        }\n  \n        const data = await response.json();\n        setBots(data);\n      } catch (error) {\n        console.error('Error fetching bots:', error);\n      }\n    };\n  \n    fetchData();\n  }, []);\n\n  const enlistBot = (bot) => {\n    if (!army.some(b => b.id === bot.id)) {\n      setArmy([...army, bot]);\n    }\n  };\n\n  const releaseBot = (bot) => {\n    setArmy(army.filter(b => b.id !== bot.id));\n  };\n\n  const dischargeBot = async (botId) => {\n    try {\n      await fetch(`https://json-server-8vqy.onrender.com/bots/${botId}`, {\n        method: 'DELETE'\n      });\n      setArmy(army.filter(b => b.id !== botId));\n    } catch (error) {\n      console.error('Error discharging bot:', error);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"bot-collection\">\n        <h2>All Bots</h2>\n        <BotCollection bots={bots} enlistBot={enlistBot} />\n      </div>\n      <div className=\"your-bot-army\">\n        <YourBotArmy army={army} releaseBot={releaseBot} dischargeBot={dischargeBot} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}