{"ast":null,"code":"var _jsxFileName = \"/root/botbattlr-Hellen-cherotich/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCard from './BotCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = ({\n  enlistBot\n}) => {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(`https://json-server-8vqy.onrender.com/bots`).then(response => response.json()).then(data => setBots(data)).catch(error => console.error('Error fetching bots:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-collection\",\n    children: bots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n      bot: bot,\n      onEnlist: enlistBot\n    }, bot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","BotCard","jsxDEV","_jsxDEV","BotCollection","enlistBot","_s","bots","setBots","fetch","then","response","json","data","catch","error","console","className","children","map","bot","onEnlist","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/botbattlr-Hellen-cherotich/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCard from './BotCard';\n\nconst BotCollection = ({ enlistBot }) => {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://json-server-8vqy.onrender.com/bots`)\n      .then(response => response.json())\n      .then(data => setBots(data))\n      .catch(error => console.error('Error fetching bots:', error));\n  }, []);\n\n  return (\n    <div className=\"bot-collection\">\n      {bots.map(bot => (\n        <BotCard key={bot.id} bot={bot} onEnlist={enlistBot} />\n      ))}\n    </div>\n  );\n};\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,4CAA2C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,OAAO,CAACK,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BX,IAAI,CAACY,GAAG,CAACC,GAAG,iBACXjB,OAAA,CAACF,OAAO;MAAcmB,GAAG,EAAEA,GAAI;MAACC,QAAQ,EAAEhB;IAAU,GAAtCe,GAAG,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkC,CACvD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjBIF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAmBnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}